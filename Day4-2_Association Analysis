{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1IFGAxiuKxSv6RtfWD8KF3cE2G87mATxc","timestamp":1695477048474},{"file_id":"1I7v7ML80XYRFHtQk8idQv8qWW7koRa_o","timestamp":1694130749291},{"file_id":"1-7vmOO_P3caFwTN6dXAIDkcuv2YW41_E","timestamp":1676679816288}]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# Association Rules Mining"],"metadata":{"id":"siUP_pnEwFSy"}},{"cell_type":"code","source":["!wget --no-check-certificate 'https://docs.google.com/uc?export=download&id=1nHP-sfh4cdUIp6KzsVfrcOAqb81SOU9g' -O retail_dataset.csv"],"metadata":{"id":"ZuYzovvyv_-i","executionInfo":{"status":"ok","timestamp":1695539576520,"user_tz":-420,"elapsed":806,"user":{"displayName":"Phathaphon Sawettaboot","userId":"10187651325203935311"}},"outputId":"628022b6-5ecf-42a5-8dd7-19e4fa5fdf55","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":1,"outputs":[{"output_type":"stream","name":"stdout","text":["--2023-09-24 07:12:55--  https://docs.google.com/uc?export=download&id=1nHP-sfh4cdUIp6KzsVfrcOAqb81SOU9g\n","Resolving docs.google.com (docs.google.com)... 172.253.63.113, 172.253.63.100, 172.253.63.138, ...\n","Connecting to docs.google.com (docs.google.com)|172.253.63.113|:443... connected.\n","HTTP request sent, awaiting response... 303 See Other\n","Location: https://doc-0s-28-docs.googleusercontent.com/docs/securesc/ha0ro937gcuc7l7deffksulhg5h7mbp1/e168rp3nfnqspc3utt16jiev44rjpu8i/1695539550000/05830297694632628921/*/1nHP-sfh4cdUIp6KzsVfrcOAqb81SOU9g?e=download&uuid=ca78670e-8ec0-4639-829c-43d2af325006 [following]\n","Warning: wildcards not supported in HTTP.\n","--2023-09-24 07:12:55--  https://doc-0s-28-docs.googleusercontent.com/docs/securesc/ha0ro937gcuc7l7deffksulhg5h7mbp1/e168rp3nfnqspc3utt16jiev44rjpu8i/1695539550000/05830297694632628921/*/1nHP-sfh4cdUIp6KzsVfrcOAqb81SOU9g?e=download&uuid=ca78670e-8ec0-4639-829c-43d2af325006\n","Resolving doc-0s-28-docs.googleusercontent.com (doc-0s-28-docs.googleusercontent.com)... 172.253.63.132, 2607:f8b0:4004:c08::84\n","Connecting to doc-0s-28-docs.googleusercontent.com (doc-0s-28-docs.googleusercontent.com)|172.253.63.132|:443... connected.\n","HTTP request sent, awaiting response... 200 OK\n","Length: 8420 (8.2K) [text/csv]\n","Saving to: ‘retail_dataset.csv’\n","\n","retail_dataset.csv  100%[===================>]   8.22K  --.-KB/s    in 0s      \n","\n","2023-09-24 07:12:56 (75.3 MB/s) - ‘retail_dataset.csv’ saved [8420/8420]\n","\n"]}]},{"cell_type":"code","source":["import pandas as pd\n","import numpy as np\n","from mlxtend.frequent_patterns import apriori, association_rules\n","import matplotlib.pyplot as plt"],"metadata":{"id":"t8Cz0VYYjb9U","executionInfo":{"status":"ok","timestamp":1695539578790,"user_tz":-420,"elapsed":6,"user":{"displayName":"Phathaphon Sawettaboot","userId":"10187651325203935311"}}},"execution_count":2,"outputs":[]},{"cell_type":"code","source":["df = pd.read_csv('retail_dataset.csv')\n","## Print first 10 rows\n","df.head(10)"],"metadata":{"id":"5ejM0LE1jkj8","executionInfo":{"status":"ok","timestamp":1695539580326,"user_tz":-420,"elapsed":111,"user":{"displayName":"Phathaphon Sawettaboot","userId":"10187651325203935311"}},"outputId":"d8e0b4bf-7ffc-4a61-b4db-47debe053d5c","colab":{"base_uri":"https://localhost:8080/","height":405}},"execution_count":3,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/ipykernel/ipkernel.py:283: DeprecationWarning: `should_run_async` will not call `transform_cell` automatically in the future. Please pass the result to `transformed_cell` argument and any exception that happen during thetransform in `preprocessing_exc_tuple` in IPython 7.17 and above.\n","  and should_run_async(code)\n"]},{"output_type":"execute_result","data":{"text/plain":["        0       1       2       3       4       5       6\n","0   Bread    Wine    Eggs    Meat  Cheese  Pencil  Diaper\n","1   Bread  Cheese    Meat  Diaper    Wine    Milk  Pencil\n","2  Cheese    Meat    Eggs    Milk    Wine     NaN     NaN\n","3  Cheese    Meat    Eggs    Milk    Wine     NaN     NaN\n","4    Meat  Pencil    Wine     NaN     NaN     NaN     NaN\n","5    Eggs   Bread    Wine  Pencil    Milk  Diaper   Bagel\n","6    Wine  Pencil    Eggs  Cheese     NaN     NaN     NaN\n","7   Bagel   Bread    Milk  Pencil  Diaper     NaN     NaN\n","8   Bread  Diaper  Cheese    Milk    Wine    Eggs     NaN\n","9   Bagel    Wine  Diaper    Meat  Pencil    Eggs  Cheese"],"text/html":["\n","  <div id=\"df-d45dc74f-af6a-41ba-b580-120865c78a8d\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","      <th>1</th>\n","      <th>2</th>\n","      <th>3</th>\n","      <th>4</th>\n","      <th>5</th>\n","      <th>6</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Bread</td>\n","      <td>Wine</td>\n","      <td>Eggs</td>\n","      <td>Meat</td>\n","      <td>Cheese</td>\n","      <td>Pencil</td>\n","      <td>Diaper</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Bread</td>\n","      <td>Cheese</td>\n","      <td>Meat</td>\n","      <td>Diaper</td>\n","      <td>Wine</td>\n","      <td>Milk</td>\n","      <td>Pencil</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Cheese</td>\n","      <td>Meat</td>\n","      <td>Eggs</td>\n","      <td>Milk</td>\n","      <td>Wine</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Cheese</td>\n","      <td>Meat</td>\n","      <td>Eggs</td>\n","      <td>Milk</td>\n","      <td>Wine</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Meat</td>\n","      <td>Pencil</td>\n","      <td>Wine</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>Eggs</td>\n","      <td>Bread</td>\n","      <td>Wine</td>\n","      <td>Pencil</td>\n","      <td>Milk</td>\n","      <td>Diaper</td>\n","      <td>Bagel</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>Wine</td>\n","      <td>Pencil</td>\n","      <td>Eggs</td>\n","      <td>Cheese</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>Bagel</td>\n","      <td>Bread</td>\n","      <td>Milk</td>\n","      <td>Pencil</td>\n","      <td>Diaper</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>Bread</td>\n","      <td>Diaper</td>\n","      <td>Cheese</td>\n","      <td>Milk</td>\n","      <td>Wine</td>\n","      <td>Eggs</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>Bagel</td>\n","      <td>Wine</td>\n","      <td>Diaper</td>\n","      <td>Meat</td>\n","      <td>Pencil</td>\n","      <td>Eggs</td>\n","      <td>Cheese</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d45dc74f-af6a-41ba-b580-120865c78a8d')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-d45dc74f-af6a-41ba-b580-120865c78a8d button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-d45dc74f-af6a-41ba-b580-120865c78a8d');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-f67aa4f6-7e9c-4e1d-a94e-e93d6322cc71\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f67aa4f6-7e9c-4e1d-a94e-e93d6322cc71')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-f67aa4f6-7e9c-4e1d-a94e-e93d6322cc71 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":3}]},{"cell_type":"markdown","source":["Find unique items"],"metadata":{"id":"H3jKUGGCuMve"}},{"cell_type":"code","source":["items = set()\n","for col in df:\n","    items.update(df[col].unique())\n","print(items)"],"metadata":{"id":"d6Uv3zZNkC6V","executionInfo":{"status":"ok","timestamp":1695539583607,"user_tz":-420,"elapsed":394,"user":{"displayName":"Phathaphon Sawettaboot","userId":"10187651325203935311"}},"outputId":"29af0ede-ed8c-4f3a-c0ea-2a4da5f1e8b2","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":4,"outputs":[{"output_type":"stream","name":"stdout","text":["{'Wine', 'Bagel', 'Diaper', 'Eggs', 'Meat', 'Milk', nan, 'Bread', 'Pencil', 'Cheese'}\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/ipykernel/ipkernel.py:283: DeprecationWarning: `should_run_async` will not call `transform_cell` automatically in the future. Please pass the result to `transformed_cell` argument and any exception that happen during thetransform in `preprocessing_exc_tuple` in IPython 7.17 and above.\n","  and should_run_async(code)\n"]}]},{"cell_type":"markdown","source":["Data Preprocessing\n","One Hot Encoding"],"metadata":{"id":"atB6dBjPkIe1"}},{"cell_type":"code","source":["itemset = set(items)\n","encoded_vals = []\n","for index, row in df.iterrows():\n","    rowset = set(row)\n","    labels = {}\n","    uncommons = list(itemset - rowset)\n","    commons = list(itemset.intersection(rowset))\n","    for uc in uncommons:\n","        labels[uc] = 0\n","    for com in commons:\n","        labels[com] = 1\n","    encoded_vals.append(labels)\n","encoded_vals[0]\n","ohe_df = pd.DataFrame(encoded_vals)\n","ohe_df"],"metadata":{"id":"sLSSc76okLds","executionInfo":{"status":"ok","timestamp":1695539585728,"user_tz":-420,"elapsed":717,"user":{"displayName":"Phathaphon Sawettaboot","userId":"10187651325203935311"}},"outputId":"efb6c8f8-1cc2-4257-e33c-8e9b5c1302d8","colab":{"base_uri":"https://localhost:8080/","height":464}},"execution_count":5,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/ipykernel/ipkernel.py:283: DeprecationWarning: `should_run_async` will not call `transform_cell` automatically in the future. Please pass the result to `transformed_cell` argument and any exception that happen during thetransform in `preprocessing_exc_tuple` in IPython 7.17 and above.\n","  and should_run_async(code)\n"]},{"output_type":"execute_result","data":{"text/plain":["     Milk  Bagel  NaN  Wine  Diaper  Eggs  Meat  Bread  Pencil  Cheese\n","0       0      0    0     1       1     1     1      1       1       1\n","1       1      0    0     1       1     0     1      1       1       1\n","2       1      0    1     1       0     1     1      0       0       1\n","3       1      0    1     1       0     1     1      0       0       1\n","4       0      0    1     1       0     0     1      0       1       0\n","..    ...    ...  ...   ...     ...   ...   ...    ...     ...     ...\n","310     0      0    1     0       0     1     0      1       0       1\n","311     1      0    1     0       0     0     1      0       1       0\n","312     0      0    0     1       1     1     1      1       1       1\n","313     0      0    1     0       0     0     1      0       0       1\n","314     0      1    1     1       0     1     1      1       0       0\n","\n","[315 rows x 10 columns]"],"text/html":["\n","  <div id=\"df-8aabd539-2ca8-48af-a807-0621d9d1cafe\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Milk</th>\n","      <th>Bagel</th>\n","      <th>NaN</th>\n","      <th>Wine</th>\n","      <th>Diaper</th>\n","      <th>Eggs</th>\n","      <th>Meat</th>\n","      <th>Bread</th>\n","      <th>Pencil</th>\n","      <th>Cheese</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>310</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>311</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>312</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>313</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>314</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>315 rows × 10 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8aabd539-2ca8-48af-a807-0621d9d1cafe')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-8aabd539-2ca8-48af-a807-0621d9d1cafe button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-8aabd539-2ca8-48af-a807-0621d9d1cafe');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-52f0f3e7-20e6-4eb6-abdc-331256e8b35f\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-52f0f3e7-20e6-4eb6-abdc-331256e8b35f')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-52f0f3e7-20e6-4eb6-abdc-331256e8b35f button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":5}]},{"cell_type":"markdown","source":["Select all Attributes except NaN"],"metadata":{"id":"tkFdgX_su3xi"}},{"cell_type":"code","source":["feature_cols = ['Milk',\t'Bagel',\t'Wine',\t'Bread',\t'Diaper',\t'Pencil',\t'Cheese',\t'Meat',\t'Eggs']\n","ohe_df = ohe_df[feature_cols]"],"metadata":{"id":"YlsRZXohuSrD","executionInfo":{"status":"ok","timestamp":1694234653713,"user_tz":-420,"elapsed":12,"user":{"displayName":"Aurawan Imsombut","userId":"05830297694632628921"}},"outputId":"57da9737-1e54-4bb6-ea1b-52df7a5b16c4","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/ipykernel/ipkernel.py:283: DeprecationWarning: `should_run_async` will not call `transform_cell` automatically in the future. Please pass the result to `transformed_cell` argument and any exception that happen during thetransform in `preprocessing_exc_tuple` in IPython 7.17 and above.\n","  and should_run_async(code)\n"]}]},{"cell_type":"markdown","source":["Applying Apriori"],"metadata":{"id":"MU8jh56skQCj"}},{"cell_type":"code","source":["freq_items = apriori(ohe_df, min_support=0.2, use_colnames=True)\n","freq_items.head(15)"],"metadata":{"id":"9mAoU4hNkOcN","executionInfo":{"status":"ok","timestamp":1694234653713,"user_tz":-420,"elapsed":11,"user":{"displayName":"Aurawan Imsombut","userId":"05830297694632628921"}},"outputId":"faac7076-8b03-48d4-afdc-50ce6c27766c","colab":{"base_uri":"https://localhost:8080/","height":609}},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/ipykernel/ipkernel.py:283: DeprecationWarning: `should_run_async` will not call `transform_cell` automatically in the future. Please pass the result to `transformed_cell` argument and any exception that happen during thetransform in `preprocessing_exc_tuple` in IPython 7.17 and above.\n","  and should_run_async(code)\n","/usr/local/lib/python3.10/dist-packages/mlxtend/frequent_patterns/fpcommon.py:110: DeprecationWarning: DataFrames with non-bool types result in worse computationalperformance and their support might be discontinued in the future.Please use a DataFrame with bool type\n","  warnings.warn(\n"]},{"output_type":"execute_result","data":{"text/plain":["     support        itemsets\n","0   0.501587          (Milk)\n","1   0.425397         (Bagel)\n","2   0.438095          (Wine)\n","3   0.504762         (Bread)\n","4   0.406349        (Diaper)\n","5   0.361905        (Pencil)\n","6   0.501587        (Cheese)\n","7   0.476190          (Meat)\n","8   0.438095          (Eggs)\n","9   0.225397   (Milk, Bagel)\n","10  0.219048    (Milk, Wine)\n","11  0.279365   (Bread, Milk)\n","12  0.304762  (Milk, Cheese)\n","13  0.244444    (Milk, Meat)\n","14  0.244444    (Milk, Eggs)"],"text/html":["\n","  <div id=\"df-7ef86457-dca8-4f96-8e02-fe89f7cb33cb\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>support</th>\n","      <th>itemsets</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.501587</td>\n","      <td>(Milk)</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.425397</td>\n","      <td>(Bagel)</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.438095</td>\n","      <td>(Wine)</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0.504762</td>\n","      <td>(Bread)</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0.406349</td>\n","      <td>(Diaper)</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>0.361905</td>\n","      <td>(Pencil)</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>0.501587</td>\n","      <td>(Cheese)</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>0.476190</td>\n","      <td>(Meat)</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>0.438095</td>\n","      <td>(Eggs)</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>0.225397</td>\n","      <td>(Milk, Bagel)</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>0.219048</td>\n","      <td>(Milk, Wine)</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>0.279365</td>\n","      <td>(Bread, Milk)</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>0.304762</td>\n","      <td>(Milk, Cheese)</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>0.244444</td>\n","      <td>(Milk, Meat)</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>0.244444</td>\n","      <td>(Milk, Eggs)</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7ef86457-dca8-4f96-8e02-fe89f7cb33cb')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-7ef86457-dca8-4f96-8e02-fe89f7cb33cb button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-7ef86457-dca8-4f96-8e02-fe89f7cb33cb');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-0a0bc0dd-8e91-46a3-8e87-e501c1b9f680\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-0a0bc0dd-8e91-46a3-8e87-e501c1b9f680')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-0a0bc0dd-8e91-46a3-8e87-e501c1b9f680 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["rules = association_rules(freq_items, metric=\"confidence\", min_threshold=0.6)\n","rules"],"metadata":{"id":"ODNEsvd8lkOk","executionInfo":{"status":"error","timestamp":1695539590646,"user_tz":-420,"elapsed":467,"user":{"displayName":"Phathaphon Sawettaboot","userId":"10187651325203935311"}},"outputId":"4d5b3bdc-366c-44f9-c792-f3b5759ec895","colab":{"base_uri":"https://localhost:8080/","height":238}},"execution_count":6,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/ipykernel/ipkernel.py:283: DeprecationWarning: `should_run_async` will not call `transform_cell` automatically in the future. Please pass the result to `transformed_cell` argument and any exception that happen during thetransform in `preprocessing_exc_tuple` in IPython 7.17 and above.\n","  and should_run_async(code)\n"]},{"output_type":"error","ename":"NameError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-6-5b509ddd1ead>\u001b[0m in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mrules\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0massociation_rules\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfreq_items\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmetric\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m\"confidence\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmin_threshold\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m0.6\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      2\u001b[0m \u001b[0mrules\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mNameError\u001b[0m: name 'freq_items' is not defined"]}]}]}